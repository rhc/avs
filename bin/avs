# frozen_string_literal: true

require_relative 'model'
require_relative 'fixture'

class App
  extend GLI::App

  desc 'Manage assets'
  arg_name 'Describe arguments to asset here'
  command :assets do |c|
    c.desc 'Describe a switch to asset'
    c.switch :s

    c.desc 'Describe a flag to asset'
    c.default_value 'default'
    c.flag :f
    c.action do |_global_options, _options, _args|
      # Your command logic specific to 'asset' here
      assets = fetch_fixtures
      puts 'list assets'
      assets.each do |asset|
        puts asset
      end
    end
  end
end
      puts 'vulnerability command ran'
    end
  end

  desc 'Manage solutions'
  arg_name 'Manage solutions'
  command :solution do |c|
    c.action do |_global_options, _options, _args|
      puts 'solution command ran'
    end
  end

  pre do |_global, _command, _options, _args|
    # Pre logic here
    # Return true to proceed; false to abort and not call the
    # chosen command
    # Use skips_pre before a command to skip this block
    # on that command only
    true
  end

  post do |global, command, options, args|
    # Post logic here
    # Use skips_post before a command to skip this
    # block on that command only
  end

  on_error do |_exception|
    # Error logic here
    # return false to skip default error handling
    true
  end
end

exit App.run(ARGV)
