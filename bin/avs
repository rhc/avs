#!/usr/bin/env ruby

# frozen_string_literal: true

require 'gli'
require_relative '../lib/avs'
require_relative '../lib/service/db'
require_relative '../lib/service/api/insightvm'

class App
  extend GLI::App

  program_desc 'Describe your application here'

  version Avs::VERSION

  subcommand_option_handling :normal
  arguments :strict

  desc 'Describe some switch here'
  switch [:s,:switch]

  desc 'Describe some flag here'
  default_value 'the default'
  arg_name 'The name of the argument'
  flag [:f,:flagname]

  desc 'Manage vulnerabilities'
  arg_name 'Describe arguments to vulnerability here'
  command :vulnerabilities do |c|
    c.action do |global_options,options,args|
      puts "manage vulns ..."
    end
  end

  desc 'Manage solutions'
  arg_name 'Manage solutions'
  command :solutions do |c|
    c.action do |_global_options, _options, _args|
      puts 'solution command ran'
    end
  end

  pre do |_global, _command, _options, _args|
    # Pre logic here
    # Return true to proceed; false to abort and not call the
    # chosen command
    # Use skips_pre before a command to skip this block
    # on that command only
    true
  end

  post do |global, command, options, args|
    # Post logic here
    # Use skips_post before a command to skip this
    # block on that command only
  end

  on_error do |_exception|
    # Error logic here
    # return false to skip default error handling
    true
  end

  # TODO use the ENV for host, db, port
  def self.api
    @api ||= InsightVMApi.new(
      'https://sbginsightvmconsole.standardbank.co.za:3780/api/3',
      'r7admin', 
      'P@ssword1234'
    )
  end

  # TODO use the ENV for host, db, port
  def self.db
    @db ||= Db.new(host: '127.0.0.1', db: 'avs', user: 'avs',port: 5433)
  end
end

exit App.run(ARGV)
